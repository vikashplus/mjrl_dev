hydra:
  run:
    dir: /checkpoint/${env:USER}/outputs_kitchenJ8b/${hydra.job.name}/${now:%Y-%m-%d}_${now:%H-%M-%S}
    subdir: ${hydra.job.num}_${hydra.job.override_dirname}
  sweep:
    dir: /checkpoint/${env:USER}/outputs_kitchenJ8b/${hydra.job.name}/${now:%Y-%m-%d}_${now:%H-%M-%S}
    subdir: ${hydra.job.num}_${hydra.job.override_dirname}
  launcher:
    cpus_per_task: 24
    gpus_per_node: 0
    tasks_per_node: 1
    timeout_min: 4320
    mem_gb: 64
    name: ${hydra.job.name}
    _target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.SlurmLauncher
    submitit_folder: ${hydra.sweep.dir}/.submitit/%j
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra/output=slurm
    - hydra/launcher=slurm
    task:
    - env=kitchen_ldoor_close-v3
    - seed=4,5,6,7,8,9,10
  job:
    name: ${env}
    override_dirname: env=kitchen_ldoor_close-v3,seed=4,5,6,7,8,9,10
    id: ???
    num: ???
    config_name: hydra_kitchen_config.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.1
    cwd: /private/home/vikashplus/Libraries/mjrl_dev/mjrl_dev/hydra
    config_sources:
    - path: hydra_plugins.fair_cluster.conf
      schema: pkg
      provider: fair-cluster-defaults
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /private/home/vikashplus/Libraries/mjrl_dev/mjrl_dev/hydra/config
      schema: file
      provider: main
    - path: hydra_plugins.fairtask.conf
      schema: pkg
      provider: fairtask
    - path: hydra_plugins.hydra_submitit_launcher.conf
      schema: pkg
      provider: hydra-submitit-launcher
    - path: ''
      schema: structured
      provider: schema
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: slurm
      hydra/output: slurm
  verbose: false
default:
- override hydra/output: local
- override hydra/launcher: local
env: kitchen_ldoor_close-v3
algorithm: NPG
seed: 123
sample_mode: trajectories
rl_num_traj: 200
rl_num_samples: 0
num_cpu: 10
rl_num_iter: 501
save_freq: 100
eval_rollouts: 10
exp_notes: 'J0:Adding franka_appliance class. Adding random envs. Refactor multi_task_base_v1.
  J2: Training DEMO_ENTRY_POINT. J3: Bugfix for horizon. J4: Sensor configs. J5: making
  a train to commit the baselines 5b: random_entry_point. J6> Testing new microwave
  position. J7: Random entry point redo post v0.2 update (serialization fix, env seed)+Franka_micro_open
  H 75. J5d: ENTRY_POINT = RANDOM_ENTRY_POINT. 1a0ddda (HEAD -> v0.1dev, tag: v0.1,
  origin/v0.1dev, origin/v0.1). J8:Baselines for v0.2 J8b: Debugging kitchen_ldoor_close-v3.
  Running more seeds for V0.2'
policy_size: (64, 64)
init_log_std: -0.1
min_log_std: -1.0
vf_hidden_size: (128, 128)
vf_batch_size: 64
vf_epochs: 2
vf_learn_rate: 0.001
rl_step_size: 0.05
rl_gamma: 0.995
rl_gae: 0.97
alg_hyper_params:
  device: cpu
job_name: job
